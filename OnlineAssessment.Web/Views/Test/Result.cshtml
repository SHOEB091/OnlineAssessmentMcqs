@model OnlineAssessment.Web.Models.TestResult

@{
    ViewData["Title"] = "Test Result";
}

<div class="result-container">
    <div class="result-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="display-4 mb-3">Test Result</h1>
                    <p class="lead text-muted">@Model.Test.Title</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <div class="action-buttons">
                        <button onclick="exportResult()" class="btn btn-outline-light me-2">
                            <i class="fas fa-download"></i> Export
                        </button>
                        <a href="/Test/History" class="btn btn-outline-light">
                            <i class="fas fa-history"></i> History
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-8">
                <div class="result-card">
                    <div class="result-summary">
                        <div class="score-display">
                            <div class="score-circle @(Model.Score >= 70 ? "score-pass" : "score-fail")">
                                <div class="score-content">
                                    <h2 class="display-2 mb-0">@Model.Score.ToString("0")</h2>
                                    <small>out of 100</small>
                                </div>
                            </div>
                            <div class="score-status">
                                <span class="badge @(Model.Score >= 70 ? "bg-success" : "bg-danger")">
                                    @(Model.Score >= 70 ? "PASSED" : "FAILED")
                                </span>
                            </div>
                        </div>
                        <div class="result-details">
                            <div class="detail-item">
                                <i class="fas fa-user"></i>
                                <div>
                                    <span class="label">Candidate</span>
                                    <span class="value">@Model.Username</span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-calendar"></i>
                                <div>
                                    <span class="label">Submitted</span>
                                    <span class="value">@Model.SubmittedAt.ToString("MMM dd, yyyy HH:mm")</span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-question-circle"></i>
                                <div>
                                    <span class="label">Questions</span>
                                    <span class="value">@Model.TotalQuestions</span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-check-circle"></i>
                                <div>
                                    <span class="label">Correct</span>
                                    <span class="value">@Model.CorrectAnswers</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="result-actions">
                    <div class="action-card">
                        <h4>Next Steps</h4>
                        <div class="action-buttons">
                            <a href="/Test/Index" class="btn btn-primary btn-lg w-100 mb-3">
                                <i class="fas fa-arrow-left me-2"></i>Back to Tests
                            </a>
                            <a href="/Test/History" class="btn btn-outline-primary btn-lg w-100">
                                <i class="fas fa-history me-2"></i>View History
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .result-container {
        min-height: 100vh;
        background-color: #f8f9fa;
    }

    .result-header {
        background: linear-gradient(135deg, #3498db, #2c3e50);
        color: white;
        padding: 3rem 0;
        margin-bottom: 2rem;
    }

    .result-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .result-summary {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .score-display {
        margin-bottom: 2rem;
    }

    .score-circle {
        width: 180px;
        height: 180px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1rem;
        border: 10px solid;
        background: white;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .score-pass {
        border-color: #28a745;
        color: #28a745;
    }

    .score-fail {
        border-color: #dc3545;
        color: #dc3545;
    }

    .score-content {
        text-align: center;
    }

    .score-content small {
        font-size: 0.9rem;
        opacity: 0.8;
    }

    .result-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        width: 100%;
    }

    .detail-item {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 10px;
        transition: transform 0.2s;
    }

    .detail-item:hover {
        transform: translateY(-3px);
    }

    .detail-item i {
        font-size: 1.5rem;
        margin-right: 1rem;
        color: #3498db;
    }

    .detail-item .label {
        display: block;
        font-size: 0.9rem;
        color: #6c757d;
    }

    .detail-item .value {
        display: block;
        font-size: 1.1rem;
        font-weight: 500;
        color: #2c3e50;
    }

    .result-actions {
        position: sticky;
        top: 2rem;
    }

    .action-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        padding: 2rem;
    }

    .action-card h4 {
        margin-bottom: 1.5rem;
        color: #2c3e50;
    }

    .badge {
        font-size: 1.1rem;
        padding: 0.5rem 1.5rem;
        border-radius: 30px;
    }

    .btn {
        border-radius: 10px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .btn-outline-light {
        border: 2px solid rgba(255, 255, 255, 0.5);
    }

    .btn-outline-light:hover {
        background: white;
        color: #3498db;
    }
</style>

@section Scripts {
    <script>
        function exportResult() {
            const resultData = {
                testTitle: '@Model.Test.Title',
                username: '@Model.Username',
                submittedAt: '@Model.SubmittedAt.ToString("g")',
                totalQuestions: @Model.TotalQuestions,
                correctAnswers: @Model.CorrectAnswers,
                score: @Model.Score
            };

            const jsonString = JSON.stringify(resultData, null, 2);
            const blob = new Blob([jsonString], { type: 'application/json' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `test_result_${resultData.testTitle.replace(/\s+/g, '_')}_${new Date().toISOString().split('T')[0]}.json`;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        }
    </script>
} 