@model IEnumerable<OnlineAssessment.Web.Models.TestResult>

@{
    ViewData["Title"] = "Organization Test Results";
}

@section Styles {
    <style>
        .org-results-container {
            min-height: 100vh;
            background-color: #f8fafc;
            padding: 2rem 0;
        }

        .org-results-header {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 20px 20px;
        }

        .org-results-title {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .org-results-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .org-results-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            margin-bottom: 2rem;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .org-results-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .org-results-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        .org-results-table th {
            background-color: #f1f5f9;
            color: #64748b;
            font-weight: 600;
            padding: 1rem;
            text-align: left;
            border-bottom: 2px solid #e2e8f0;
        }

        .org-results-table td {
            padding: 1rem;
            border-bottom: 1px solid #e2e8f0;
            vertical-align: middle;
        }

        .org-results-table tr:last-child td {
            border-bottom: none;
        }

        .test-title {
            font-weight: 600;
            color: #1e293b;
        }

        .candidate-name {
            font-weight: 600;
            color: #1e293b;
        }

        .test-date {
            color: #64748b;
            font-size: 0.9rem;
        }

        .score-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.9rem;
        }

        .score-pass {
            background-color: #dcfce7;
            color: #166534;
        }

        .score-fail {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .view-btn {
            background-color: #eff6ff;
            color: #2563eb;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .view-btn:hover {
            background-color: #dbeafe;
            color: #1d4ed8;
            transform: translateY(-2px);
        }

        .export-btn {
            background-color: #f0fdf4;
            color: #166534;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .export-btn:hover {
            background-color: #dcfce7;
            color: #14532d;
            transform: translateY(-2px);
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }

        .empty-state i {
            font-size: 3rem;
            color: #94a3b8;
            margin-bottom: 1rem;
        }

        .empty-state h3 {
            color: #1e293b;
            margin-bottom: 0.5rem;
        }

        .empty-state p {
            color: #64748b;
            margin-bottom: 1.5rem;
        }

        .back-btn {
            background-color: white;
            color: #3b82f6;
            border: 2px solid #3b82f6;
            padding: 0.5rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .back-btn:hover {
            background-color: #3b82f6;
            color: white;
            transform: translateY(-2px);
        }

        .filters-section {
            background: white;
            padding: 1.5rem;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            margin-bottom: 2rem;
        }

        .filter-group {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .filter-label {
            color: #64748b;
            font-weight: 600;
            margin-right: 0.5rem;
        }

        .filter-select {
            padding: 0.5rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            background-color: #f8fafc;
            color: #1e293b;
            font-size: 0.9rem;
            min-width: 200px;
        }

        @@media (max-width: 768px) {
            .org-results-table {
                display: block;
                overflow-x: auto;
            }

            .org-results-title {
                font-size: 1.5rem;
            }

            .org-results-subtitle {
                font-size: 1rem;
            }

            .filter-group {
                flex-direction: column;
                align-items: stretch;
            }

            .filter-select {
                width: 100%;
            }
        }
    </style>
}

<div class="org-results-container">
    <div class="org-results-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="org-results-title">Organization Test Results</h1>
                    <p class="org-results-subtitle">Monitor and analyze test performances across your organization</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <a href="/Test/Index" class="back-btn">
                        <i class="fas fa-arrow-left"></i>
                        Back to Tests
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="filters-section">
            <div class="filter-group">
                <div>
                    <span class="filter-label">Test:</span>
                    <select class="filter-select" id="testFilter">
                        <option value="">All Tests</option>
                        @foreach (var test in Model.Select(r => r.Test.Title).Distinct())
                        {
                            <option value="@test">@test</option>
                        }
                    </select>
                </div>
                <div>
                    <span class="filter-label">Status:</span>
                    <select class="filter-select" id="statusFilter">
                        <option value="">All Status</option>
                        <option value="passed">Passed</option>
                        <option value="failed">Failed</option>
                    </select>
                </div>
                <div>
                    <span class="filter-label">Date Range:</span>
                    <select class="filter-select" id="dateFilter">
                        <option value="">All Time</option>
                        <option value="today">Today</option>
                        <option value="week">This Week</option>
                        <option value="month">This Month</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="org-results-card">
            @if (!Model.Any())
            {
                <div class="empty-state">
                    <i class="fas fa-clipboard-list"></i>
                    <h3>No Test Results</h3>
                    <p>No test results are available for your organization yet.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="org-results-table">
                        <thead>
                            <tr>
                                <th>Test Title</th>
                                <th>Candidate</th>
                                <th>Date Taken</th>
                                <th>Score</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="resultsTableBody">
                            @foreach (var result in Model)
                            {
                                <tr class="result-row" 
                                    data-test="@result.Test.Title"
                                    data-status="@(result.Score >= 70 ? "passed" : "failed")"
                                    data-date="@result.SubmittedAt.ToString("yyyy-MM-dd")">
                                    <td>
                                        <div class="test-title">@result.Test.Title</div>
                                        <div class="test-date">@result.SubmittedAt.ToString("MMM dd, yyyy HH:mm")</div>
                                    </td>
                                    <td>
                                        <div class="candidate-name">@result.Username</div>
                                    </td>
                                    <td>@result.SubmittedAt.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        <span class="score-badge @(result.Score >= 70 ? "score-pass" : "score-fail")">
                                            @result.Score.ToString("0")%
                                        </span>
                                    </td>
                                    <td>
                                        <span class="score-badge @(result.Score >= 70 ? "score-pass" : "score-fail")">
                                            @(result.Score >= 70 ? "PASSED" : "FAILED")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <a href="/Test/Result/@result.Id" class="view-btn">
                                                <i class="fas fa-eye"></i>
                                                View
                                            </a>
                                            <button class="export-btn" onclick="exportResult(@result.Id)">
                                                <i class="fas fa-download"></i>
                                                Export
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const testFilter = document.getElementById('testFilter');
            const statusFilter = document.getElementById('statusFilter');
            const dateFilter = document.getElementById('dateFilter');
            const resultRows = document.querySelectorAll('.result-row');
            const originalEmptyState = document.querySelector('.empty-state');
            const table = document.querySelector('.table-responsive');

            function filterResults() {
                const selectedTest = testFilter.value;
                const selectedStatus = statusFilter.value;
                const selectedDate = dateFilter.value;
                const today = new Date();
                const startOfWeek = new Date(today);
                startOfWeek.setDate(today.getDate() - today.getDay());
                const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);

                let visibleCount = 0;

                resultRows.forEach(row => {
                    const test = row.dataset.test;
                    const status = row.dataset.status;
                    const date = new Date(row.dataset.date);

                    let showRow = true;

                    // Test filter
                    if (selectedTest && test !== selectedTest) {
                        showRow = false;
                    }

                    // Status filter
                    if (selectedStatus && status !== selectedStatus) {
                        showRow = false;
                    }

                    // Date filter
                    if (selectedDate) {
                        switch (selectedDate) {
                            case 'today':
                                if (date.toDateString() !== today.toDateString()) {
                                    showRow = false;
                                }
                                break;
                            case 'week':
                                if (date < startOfWeek) {
                                    showRow = false;
                                }
                                break;
                            case 'month':
                                if (date < startOfMonth) {
                                    showRow = false;
                                }
                                break;
                        }
                    }

                    if (showRow) {
                        row.style.display = '';
                        visibleCount++;
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Handle empty state
                if (visibleCount === 0) {
                    // Remove any existing empty state
                    const existingEmptyState = document.querySelector('.empty-state');
                    if (existingEmptyState) {
                        existingEmptyState.remove();
                    }

                    // Create and show new empty state
                    const newEmptyState = document.createElement('div');
                    newEmptyState.className = 'empty-state';
                    newEmptyState.innerHTML = `
                        <i class="fas fa-search"></i>
                        <h3>No Results Found</h3>
                        <p>No test results match your selected filters.</p>
                        <button class="view-btn mt-3" onclick="resetFilters()">
                            <i class="fas fa-undo"></i>
                            Reset Filters
                        </button>
                    `;
                    
                    if (table) {
                        table.style.display = 'none';
                        table.parentNode.insertBefore(newEmptyState, table);
                    }
                } else {
                    // Remove empty state if it exists
                    const emptyState = document.querySelector('.empty-state');
                    if (emptyState) {
                        emptyState.remove();
                    }
                    
                    if (table) {
                        table.style.display = '';
                    }
                }
            }

            // Add event listeners to filters
            testFilter.addEventListener('change', filterResults);
            statusFilter.addEventListener('change', filterResults);
            dateFilter.addEventListener('change', filterResults);

            // Reset filters function
            window.resetFilters = function() {
                testFilter.value = '';
                statusFilter.value = '';
                dateFilter.value = '';
                filterResults();
            };

            function exportResult(resultId) {
                // Add export functionality here
                console.log('Exporting result:', resultId);
            }
        });
    </script>
} 