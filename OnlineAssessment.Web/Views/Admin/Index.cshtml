@model IEnumerable<OnlineAssessment.Web.Models.Test>
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Admin Dashboard</h4>
                    <a href="@Url.Action("Create", "Test")" class="btn btn-light">
                        <i class="fas fa-plus"></i> Create New Test
                    </a>
                </div>
                <div class="card-body">
                    <h5 class="mb-4">Available Tests</h5>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Test Name</th>
                                    <th>Duration</th>
                                    <th>Created By</th>
                                    <th>Created At</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var test in Model)
                                {
                                    <tr data-test-id="@test.Id">
                                        <td>@test.Title</td>
                                        <td>@test.DurationMinutes minutes</td>
                                        <td>@test.CreatedBy</td>
                                        <td>@test.CreatedAt.ToString("g")</td>
                                        <td>
                                            <div class="btn-group">
                                                <a href="@Url.Action("Details", "Test", new { id = test.Id })" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                                <a href="@Url.Action("UploadQuestions", "Test", new { id = test.Id })" class="btn btn-sm btn-success">
                                                    <i class="fas fa-upload"></i> Upload Questions
                                                </a>
                                                <a href="@Url.Action("UploadCodingQuestions", "Test", new { id = test.Id })" class="btn btn-sm btn-primary">
                                                    <i class="fas fa-code"></i> Upload Coding
                                                </a>
                                                <button class="btn btn-sm btn-danger" onclick="deleteTest(@test.Id)">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function deleteTest(testId) {
            try {
                // Create a Bootstrap modal for confirmation
                const confirmModal = document.createElement('div');
                confirmModal.className = 'modal fade';
                confirmModal.innerHTML = `
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Confirm Deletion</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <p>Are you sure you want to delete this test? This action cannot be undone.</p>
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <strong>Warning:</strong> This will permanently delete the test and all its questions.
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-danger" id="confirmDelete">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                document.body.appendChild(confirmModal);
                const modal = new bootstrap.Modal(confirmModal);
                modal.show();

                confirmModal.querySelector('#confirmDelete').addEventListener('click', async function() {
                    const deleteButton = this;
                    deleteButton.disabled = true;
                    deleteButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...';

                    try {
                        const response = await fetch(`/Test/delete/${testId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const result = await response.json();
                        
                        if (result.success) {
                            showToast('Test deleted successfully!', 'success');
                            // Remove the test row from the table with animation
                            const testRow = document.querySelector(`tr[data-test-id="${testId}"]`);
                            if (testRow) {
                                testRow.style.transition = 'all 0.3s ease';
                                testRow.style.opacity = '0';
                                setTimeout(() => {
                                    testRow.remove();
                                    // Check if there are no more tests
                                    const remainingTests = document.querySelectorAll('tr[data-test-id]');
                                    if (remainingTests.length === 0) {
                                        location.reload(); // Reload to show "No tests available" message
                                    }
                                }, 300);
                            }
                        } else {
                            showToast(result.message || 'Error deleting test', 'error');
                            deleteButton.disabled = false;
                            deleteButton.innerHTML = '<i class="fas fa-trash"></i> Delete';
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        showToast('An error occurred while deleting the test. Please try again.', 'error');
                        deleteButton.disabled = false;
                        deleteButton.innerHTML = '<i class="fas fa-trash"></i> Delete';
                    } finally {
                        modal.hide();
                    }
                });

                confirmModal.addEventListener('hidden.bs.modal', function () {
                    document.body.removeChild(confirmModal);
                });
            } catch (error) {
                console.error('Error:', error);
                showToast('An unexpected error occurred. Please try again.', 'error');
            }
        }
    </script>
} 